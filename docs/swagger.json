{
    "swagger": "2.0",
    "info": {
        "description": "...",
        "title": "Tasks API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/nextdate": {
            "get": {
                "description": "Вычисляет дату следующего выполнения задачи исходя из текущей даты, даты последнего выполнения и правила повторения.",
                "tags": [
                    "tasks"
                ],
                "summary": "Получить дату следующего выполнения задачи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Текущее время в формате 20060102 (YYYYMMDD). Если не указано, используется текущее системное время",
                        "name": "now",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Дата старта задачи в формате 20060102 (YYYYMMDD)",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Правило повторения (d N, w 1,2,7, m 28 -2 ...)",
                        "name": "repeat",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Дата следующего выполнения (YYYYMMDD)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка, если невалидные параметры",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/signin": {
            "post": {
                "description": "Получить JWT токен по паролю. Пароль можно задать через переменную окружения TODO_PASSWORD (по умолчанию \"123456\").",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход в систему (логин)",
                "parameters": [
                    {
                        "description": "Пароль пользователя",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка: неверный пароль",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/task": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает одну задачу по её id.",
                "tags": [
                    "tasks"
                ],
                "summary": "Получить задачу",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID задачи",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные задачи",
                        "schema": {
                            "$ref": "#/definitions/db.Task"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет все поля существующей задачи по её id. Все поля задачи должны быть заполнены.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Обновить задачу",
                "parameters": [
                    {
                        "description": "Данные задачи для обновления",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно (пустой объект)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации/даты/декодирования",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создаёт новую задачу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Добавить задачу",
                "parameters": [
                    {
                        "description": "Новая задача",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Ошибка клиента",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет одну задачу по её id",
                "tags": [
                    "tasks"
                ],
                "summary": "Удалить задачу",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID задачи",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK (пустой объект)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Ничего не найдено",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/task/done": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отмечает выполнение задачи. Если задача одиночная — удаляет её. Если повтаряющаяся — переносит на следующую дату.",
                "tags": [
                    "tasks"
                ],
                "summary": "Отметить задачу как выполненную",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID задачи",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Выполнено успешно (пустой объект)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список задач пользователя, с опциональным поиском по подстроке.",
                "tags": [
                    "tasks"
                ],
                "summary": "Получить список задач",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр для поиска по задачам",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач",
                        "schema": {
                            "$ref": "#/definitions/api.TasksResp"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Credentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.TasksResp": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Task"
                    }
                }
            }
        },
        "db.Task": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "repeat": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}